{"version":3,"sources":["util/api.js","actions.js","reducers.js","components/owner.js","components/field-input.js","components/business.js","components/validation.js","components/loan.js","App.js","serviceWorker.js","index.js","store.js"],"names":["baseURL","api","post","type","data","Promise","resolve","reject","fetch","concat","method","body","JSON","stringify","then","response","json","res","catch","error","test","changeMessage","message","payload","initialState","owner","name","ssn","email","city","state","postalCode","business","businessNamename","businessAddress","taxId","amount","loanReducer","arguments","length","undefined","action","reduxForm","form","destroyOnUnmount","props","handleSubmit","previousPage","react_default","a","createElement","onSubmit","FormGroup","ControlLabel","Field","placeholder","component","FormControl","className","Button","onClick","bsStyle","FieldInput","_ref","input","meta","min","max","value","onChange","submitting","disabled","ValidationForm","connect","Well","Glyphicon","glyph","ConnectedLoanForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextPage","bind","assertThisInitialized","resetForm","validate","page","loan","values","setState","validate_loan","validation","React","Component","LoanForm","dispatch","result","BrowserHistory","createBrowserHistory","ConnectedApp","Grid","Row","Col","sm","smOffset","PageHeader","HashRouter","history","Route","path","App","hello","Boolean","window","location","hostname","match","ReactDOM","render","es","store","createStore","combineReducers","formReducer","applyMiddleware","thunk","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f96a5a9.chunk.js","sourcesContent":["\nconst baseURL = 'https://loanapi.herokuapp.com/';\n//const baseURL = 'http://localhost:8000/';\n\nconst test = (data) => {\n    if(data === 50000){\n        return 'undecided';}\n\n    return (data <50000) ? 'approved': 'declined';\n}\n\nfunction post(type, data) {\n    return new Promise((resolve, reject) =>{\n        fetch(`${baseURL}${type}`, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n            .then((response) => {\n              return response.json()\n            }).then((res) => {\n                resolve(res);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n    });\n}\n\nexport const api = {\n    post, test\n};\n","import {api} from './util/api';\nexport const RESET_LOAN_DATA = \"RESET_LOAN_DATA\";\nexport const VALIDATE_LOAN = \"VALIDATE_LOAN\";\n\nexport const changeMessage = (message) => {\n  return {type:VALIDATE_LOAN, payload: message};\n};\n\nexport const validate_loan = function(value){\n  return (dispatch)=>{\n    const data = {amount:value}\n    api.post('validate', data).then((result)=>{\n      dispatch(changeMessage(result.message));\n    }, error =>{\n      dispatch(changeMessage(error));\n    });\n  };\n\n};\n\nexport const reset_loan = function(value){\n    return({type:RESET_LOAN_DATA, payload: value});\n}\n","import {RESET_LOAN_DATA, VALIDATE_LOAN} from './actions'\n\nconst initialState = {\n  owner: {\n      name:'',\n      ssn:'',\n      email:'',\n      city:'',\n      state:'',\n      postalCode:''\n  },\n  business:{\n      businessNamename:'',\n      businessAddress:'',\n      taxId:'',\n      city:'',\n      state:'',\n      postalCode:'',\n      amount: 10\n  },\n  message:'Please submit a new Application'\n};\n\nconst loanReducer = (state = initialState, action) => {\n    if(action.type === VALIDATE_LOAN){\n        return {message:action.payload};\n    }\n    if(action.type === RESET_LOAN_DATA){\n        return initialState;\n    }\n    return state;\n};\nexport default loanReducer;\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\n\nconst OwnerForm = (props) => {\n    const { handleSubmit, previousPage } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormGroup>\n                <ControlLabel>Name</ControlLabel>\n                <Field name=\"name\" placeholder=\"name\" component={FormControl} type=\"text\" />\n             </FormGroup>\n            <FormGroup>\n                <ControlLabel>Social Security Number</ControlLabel>\n                <Field name=\"ssn\" placeholder=\"Social Security number\" component={FormControl} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>Email</ControlLabel>\n                <Field name=\"email\" placeholder=\"Email\" component={FormControl} type=\"email\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>City</ControlLabel>\n                <Field name=\"city\" placeholder=\"City\" component={FormControl} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>State</ControlLabel>\n                <Field name=\"state\" placeholder=\"State\" component={FormControl} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>Postal code</ControlLabel>\n                <Field name=\"postalCode\" placeholder=\"Postal code\" component={FormControl} type=\"text\" />\n            </FormGroup>\n          <FormGroup className=\"text-right\">\n            <Button type=\"button\" className=\"previous\" onClick={previousPage} bsStyle=\"default\">Previous</Button>\n            <Button type=\"submit\" className=\"next\" bsStyle=\"primary\">Validate</Button>\n          </FormGroup>\n        </form>\n    );\n}\n\nexport default reduxForm({\n  form: 'loan',\n  destroyOnUnmount: false,\n})(OwnerForm)\n","import React from 'react'\nimport {FormControl} from 'react-bootstrap';\n\nconst FieldInput = ({ input, meta, type, placeholder, min, max }) => {\n    return (\n        <FormControl\n            type={type}\n            placeholder={placeholder}\n            min={min}\n            max={max}\n            value={input.value}\n            onChange={input.onChange} />\n    )\n}\n\nexport default FieldInput;\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { FormGroup, ControlLabel, Button } from 'react-bootstrap'\nimport FieldInput from './field-input'\n\nconst BusinessForm = (props) => {\n    const { handleSubmit, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormGroup>\n                <ControlLabel>Business Name</ControlLabel>\n                <Field name=\"businessName\" placeholder=\"Business name\" component={FieldInput} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>Tax ID</ControlLabel>\n                <Field name=\"taxId\" placeholder=\"Tax ID\" component={FieldInput} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>Business Address</ControlLabel>\n                <Field name=\"businessAddress\" placeholder=\"Address\" component={FieldInput} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>City</ControlLabel>\n                <Field name=\"businessCity\" placeholder=\"City\" component={FieldInput} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>State</ControlLabel>\n                <Field name=\"businessState\" placeholder=\"State\" component={FieldInput} type=\"text\"/>\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>Postal code</ControlLabel>\n                <Field name=\"businessPostalCode\" placeholder=\"Postal code\" component={FieldInput} type=\"text\" />\n            </FormGroup>\n            <FormGroup>\n                <ControlLabel>Amount</ControlLabel>\n                <Field name=\"amount\" placeholder=\"Required amount\" component={FieldInput} type=\"number\" />\n            </FormGroup>\n            <FormGroup className=\"text-right\">\n                <Button type=\"submit\" disabled={submitting} bsStyle=\"primary\">Next</Button>\n            </FormGroup>\n        </form>\n    );\n}\n\nexport default reduxForm({\n  form: 'loan',\n  destroyOnUnmount: false\n})(BusinessForm)\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form'\nimport { FormGroup, Button, Well, Glyphicon } from 'react-bootstrap';\n\nconst ConnectedValidationForm = (props) => {\n    const { handleSubmit } = props\n    return(\n        <form onSubmit={handleSubmit}>\n        <Well> <Glyphicon glyph=\"info-sign\" /> { props.message }</Well>\n        <FormGroup className=\"text-center\">\n          <Button type=\"submit\" className=\"next\">New Application</Button>\n        </FormGroup>\n        </form>\n    );\n}\n\nconst mapStateToProps = (state) =>{\n    return {message: state.loanReducer.message};\n};\n\nconst ValidationForm = connect(mapStateToProps)(ConnectedValidationForm);\n\nexport default reduxForm({\n  form: 'loan',\n  destroyOnUnmount: false,\n})(ValidationForm)\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport OwnerForm from './owner';\nimport BusinessForm from './business';\nimport ValidationForm from './validation';\nimport {validate_loan} from '../actions';\n\nclass ConnectedLoanForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.nextPage = this.nextPage.bind(this)\n        this.previousPage = this.previousPage.bind(this)\n        this.resetForm = this.resetForm.bind(this)\n        this.validate = this.validate.bind(this)\n        this.state = {\n          page: 1,\n          loan : {}\n        }\n    }\n\n    nextPage(values) {\n        this.setState({loan: values})\n        this.setState({ page: this.state.page + 1 })\n    }\n\n    previousPage() {\n        this.setState({ page: this.state.page - 1 })\n    }\n\n    resetForm() {\n        this.setState({ page: 1 , loan: {}})\n    }\n\n    validate(values){\n        this.nextPage(values);\n        let amount = this.state.loan.amount\n        this.props.validate_loan(amount);\n\n    }\n\n    render (){\n        const { page } = this.state\n        return (\n        <div>\n            {page === 1 && <BusinessForm onSubmit={this.nextPage}/>}\n            {page === 2 && <OwnerForm previousPage={this.previousPage} onSubmit={this.validate}/>}\n            {page === 3 && <ValidationForm onSubmit={this.resetForm}/>}\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        form: state.form};\n};\n\nconst LoanForm = connect(mapStateToProps, {validate_loan})(ConnectedLoanForm);\n\n\nexport default LoanForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route} from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport LoanForm from \"./components/loan\";\nimport { Grid, Row, Col, PageHeader } from 'react-bootstrap';\n\nconst BrowserHistory = createBrowserHistory();\n\nclass ConnectedApp extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid>\n        <Row>\n            <Col sm={6} smOffset={3} className=\"text-center\">\n            <PageHeader>\n              Loan Platform <small>LendingFront</small>\n            </PageHeader>\n            </Col>\n        </Row>\n        <Row>\n            <Col sm={4} smOffset={4}>\n            <HashRouter history={BrowserHistory} >\n              <Route path=\"/\" component={LoanForm} />\n            </HashRouter>\n            </Col>\n        </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n    return {hello: state.hello};\n};\n\nconst App = connect(mapStateToProps)(ConnectedApp);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport loanReducer from './reducers';\n\nexport default function configureStore() {\n  return createStore(\n    combineReducers({ loanReducer, form: formReducer}),\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}